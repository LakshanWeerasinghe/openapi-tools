// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

listener http:Listener ep0 = new (443, config = {host: "your-domain.atlassian.com"});

service OASServiceType / on ep0 {
    resource function delete rest/api/'2/'field/[string fieldId]/context/[int contextId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/'field/[string fieldId]/context/[int contextId]/option/[int optionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/'field/[string fieldKey]/option/[int optionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/'field/[string fieldKey]/option/[int optionId]/issue(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/attachment/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/comment/[string commentId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/component/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/dashboard/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/filter/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/filter/[int id]/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/filter/[int id]/favourite(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/filter/[int id]/permission/[int permissionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/group(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/group/user(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/comment/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/remotelink(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/remotelink/[string linkId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/votes(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/watchers(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/worklog/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issue/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issueLink/[string linkId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issueLinkType/[string issueLinkTypeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issuetype/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issuetype/[string issueTypeId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issuetypescheme/[int issueTypeSchemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issuetypescheme/[int issueTypeSchemeId]/issuetype/[int issueTypeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/mypreferences(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/mypreferences/locale(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/permissionscheme/[int schemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/permissionscheme/[int schemeId]/permission/[int permissionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/project/[string projectIdOrKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/project/[string projectIdOrKey]/avatar/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/project/[string projectIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/projectCategory/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/role/[int id]/actors(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/screens/[int screenId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/screens/[int screenId]/tabs/[int tabId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/screenscheme/[string screenSchemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/universal_avatar/'type/["project"|"issuetype" 'type]/owner/[string owningObjectId]/avatar/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/user(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/user/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/user/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/version/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/webhook(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflow/[string entityId](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id]/default(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id]/draft(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id]/draft/default(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id]/draft/issuetype/[string issueType](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id]/draft/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id]/issuetype/[string issueType](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/api/'2/workflowscheme/[int id]/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/atlassian\-connect/'1/addons/[string addonKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function delete rest/atlassian\-connect/'1/app/module/dynamic(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldId]/context(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldId]/context/[int contextId]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldId]/context/defaultValue(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldId]/context/issuetypemapping(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldId]/context/projectmapping(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldId]/contexts(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldId]/screens(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldKey]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldKey]/option/[int optionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldKey]/option/suggestions/edit(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/[string fieldKey]/option/suggestions/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/'field/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/application\-properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/application\-properties/advanced\-settings(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/applicationrole(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/applicationrole/[string 'key](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/attachment/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/attachment/[string id]/expand/human(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/attachment/[string id]/expand/raw(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/attachment/meta(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/auditing/'record(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/avatar/["issuetype"|"project"|"user" 'type]/system(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/comment/[string commentId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/comment/[string commentId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/component/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/component/[string id]/relatedIssueCounts(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/configuration(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/configuration/timetracking(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/configuration/timetracking/list(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/configuration/timetracking/options(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/customField/[int fieldId]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/customFieldOption/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/dashboard(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/dashboard/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/dashboard/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/fieldconfiguration(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/fieldconfiguration/[int id]/fields(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/fieldconfigurationscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/fieldconfigurationscheme/mapping(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/fieldconfigurationscheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/[int id]/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/[int id]/permission(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/[int id]/permission/[int permissionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/defaultShareScope(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/favourite(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/my(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/filter/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/group(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/group/bulk(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/group/member(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/groups/picker(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/groupuserpicker(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/instance/license(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/changelog(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/comment(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/comment/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/editmeta(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/remotelink(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/remotelink/[string linkId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/transitions(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/votes(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/watchers(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/createmeta(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issue/picker(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issueLink/[string linkId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issueLinkType(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issueLinkType/[string issueLinkTypeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuesecurityschemes(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuesecurityschemes/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuesecurityschemes/[int issueSecuritySchemeId]/members(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetype(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetype/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetype/[string id]/alternatives(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetype/[string issueTypeId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetype/[string issueTypeId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetypescheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetypescheme/mapping(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetypescheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetypescreenscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetypescreenscheme/mapping(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/issuetypescreenscheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/jql/autocompletedata(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/jql/autocompletedata/suggestions(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/label(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/mypermissions(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/mypreferences(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/mypreferences/locale(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/myself(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/notificationscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/notificationscheme/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/permissions(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/permissionscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/permissionscheme/[int schemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/permissionscheme/[int schemeId]/permission(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/permissionscheme/[int schemeId]/permission/[int permissionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/priority(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/priority/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/'type(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/'type/["software"|"service_desk"|"business" projectTypeKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/'type/["software"|"service_desk"|"business" projectTypeKey]/accessible(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/'type/accessible(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[int projectId]/email(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[int projectId]/hierarchy(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/avatars(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/component(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/components(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/features(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/role(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/roledetails(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/statuses(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/version(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectIdOrKey]/versions(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectKeyOrId]/issuesecuritylevelscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectKeyOrId]/notificationscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectKeyOrId]/permissionscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/[string projectKeyOrId]/securitylevel(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/project/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/projectCategory(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/projectCategory/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/projectvalidate/'key(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/projectvalidate/validProjectKey(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/projectvalidate/validProjectName(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/resolution(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/resolution/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/role(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/role/[int id]/actors(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/screens(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/screens/[int screenId]/availableFields(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/screens/[int screenId]/tabs(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/screenscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/securitylevel/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/serverInfo(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/settings/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/status(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/status/[string idOrName](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/statuscategory(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/statuscategory/[string idOrKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/task/[string taskId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/universal_avatar/'type/["project"|"issuetype" 'type]/owner/[string entityId](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/assignable/multiProjectSearch(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/assignable/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/bulk(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/bulk/migration(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/email(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/email/bulk(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/groups(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/permission/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/picker(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/search/query(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/search/query/'key(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/user/viewissue/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/users(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/users/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/version/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/version/[string id]/relatedIssueCounts(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/version/[string id]/unresolvedIssueCount(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/webhook(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/webhook/failed(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflow/rule/config(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflow/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id]/default(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id]/draft(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id]/draft/default(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id]/draft/issuetype/[string issueType](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id]/draft/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id]/issuetype/[string issueType](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/[int id]/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/workflowscheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/worklog/deleted(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/api/'2/worklog/updated(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/atlassian\-connect/'1/addons/[string addonKey]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/atlassian\-connect/'1/addons/[string addonKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function get rest/atlassian\-connect/'1/app/module/dynamic(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/'field(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/'field/[string fieldId]/context(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/'field/[string fieldId]/context/[int contextId]/issuetype/remove(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/'field/[string fieldId]/context/[int contextId]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/'field/[string fieldId]/context/[int contextId]/project/remove(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/'field/[string fieldId]/context/mapping(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/'field/[string fieldKey]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/comment/list(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/component(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/customField/[int fieldId]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/dashboard(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/dashboard/[string id]/copy(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/expression/analyse(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/expression/eval(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/filter(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/filter/[int id]/permission(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/group(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/group/user(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/attachments(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/comment(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/notify(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/remotelink(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/transitions(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/votes(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/watchers(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/[string issueIdOrKey]/worklog(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/bulk(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issue/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issueLink(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issueLinkType(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issuetype(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issuetype/[string id]/avatar2(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issuetypescheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issuetypescreenscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId]/mapping/remove(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/jql/'match(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/jql/autocompletedata(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/jql/parse(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/jql/pdcleaner(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/permissions/'check(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/permissions/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/permissionscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/permissionscheme/[int schemeId]/permission(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/project/[string projectIdOrKey]/archive(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/project/[string projectIdOrKey]/avatar2(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/project/[string projectIdOrKey]/delete(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/project/[string projectIdOrKey]/restore(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/projectCategory(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/role(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/role/[int id]/actors(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/screens(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/screens/[int screenId]/tabs(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields/[string id]/move(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/screens/[int screenId]/tabs/[int tabId]/move/[int:Signed32 pos](http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/screens/addToDefault/[string fieldId](http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/screenscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/search(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/task/[string taskId]/cancel(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/universal_avatar/'type/["project"|"issuetype" 'type]/owner/[string entityId](http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/user(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/version(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/version/[string id]/move(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/version/[string id]/removeAndSwap(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/webhook(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/workflowscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/workflowscheme/[int id]/createdraft(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/api/'2/worklog/list(http:Caller caller, http:Request request) returns error? {
    }

    resource function post rest/atlassian\-connect/'1/app/module/dynamic(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/issuetype(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/option/move(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldId]/context/defaultValue(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/'field/[string fieldKey]/option/[int optionId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/app/'field/[string fieldIdOrKey]/value(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/application\-properties/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/comment/[string commentId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/component/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/configuration/timetracking(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/configuration/timetracking/options(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/customField/[int fieldId]/option(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/dashboard/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/fieldconfigurationscheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/filter/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/filter/[int id]/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/filter/[int id]/favourite(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/filter/defaultShareScope(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/[string issueIdOrKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/[string issueIdOrKey]/assignee(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/[string issueIdOrKey]/comment/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/[string issueIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/[string issueIdOrKey]/remotelink/[string linkId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/[string issueIdOrKey]/worklog/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issue/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issueLinkType/[string issueLinkTypeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetype/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetype/[string issueTypeId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescheme/[int issueTypeSchemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescheme/[int issueTypeSchemeId]/issuetype(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescheme/[int issueTypeSchemeId]/issuetype/move(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId]/mapping(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId]/mapping/default(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/issuetypescreenscheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/mypreferences(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/mypreferences/locale(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/permissionscheme/[int schemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[int projectId]/email(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[string projectIdOrKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[string projectIdOrKey]/'type/["software"|"service_desk"|"business" newProjectTypeKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[string projectIdOrKey]/avatar(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[string projectIdOrKey]/features/[string featureKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[string projectIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/project/[string projectKeyOrId]/permissionscheme(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/projectCategory/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/screens/[int screenId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/screens/[int screenId]/tabs/[int tabId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/screenscheme/[string screenSchemeId](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/settings/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/user/columns(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/user/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/version/[string id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/version/[string id]/mergeto/[string moveIssuesTo](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/webhook/refresh(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflow/rule/config(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id]/default(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id]/draft(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id]/draft/default(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id]/draft/issuetype/[string issueType](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id]/draft/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id]/issuetype/[string issueType](http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/[int id]/workflow(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/api/'2/workflowscheme/project(http:Caller caller, http:Request request) returns error? {
    }

    resource function put rest/atlassian\-connect/'1/addons/[string addonKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error? {
    }
}

type OASServiceType service object {
    *http:Service;
    resource function put rest/api/'2/app/'field/[string fieldIdOrKey]/value(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/application\-properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/application\-properties/advanced\-settings(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/application\-properties/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/applicationrole(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/applicationrole/[string 'key](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/attachment/meta(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/attachment/[string id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/attachment/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/attachment/[string id]/expand/human(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/attachment/[string id]/expand/raw(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/auditing/'record(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/avatar/["issuetype"|"project"|"user" 'type]/system(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/comment/list(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/comment/[string commentId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/comment/[string commentId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/comment/[string commentId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/comment/[string commentId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/component(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/component/[string id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/component/[string id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/component/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/component/[string id]/relatedIssueCounts(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/configuration(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/configuration/timetracking(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/configuration/timetracking(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/configuration/timetracking/list(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/configuration/timetracking/options(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/configuration/timetracking/options(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/customField/[int fieldId]/option(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/customField/[int fieldId]/option(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/customField/[int fieldId]/option(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/customFieldOption/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/dashboard(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/dashboard(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/dashboard/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/dashboard/[string dashboardId]/items/[string itemId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/dashboard/[string id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/dashboard/[string id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/dashboard/[string id](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/dashboard/[string id]/copy(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/expression/analyse(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/expression/eval(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/'field(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/search(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldId]/context(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/'field/[string fieldId]/context(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldId]/context/defaultValue(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldId]/context/defaultValue(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldId]/context/issuetypemapping(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/'field/[string fieldId]/context/mapping(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldId]/context/projectmapping(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/'field/[string fieldId]/context/[int contextId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/issuetype(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/'field/[string fieldId]/context/[int contextId]/issuetype/remove(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldId]/context/[int contextId]/option(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/option(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/'field/[string fieldId]/context/[int contextId]/option(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/option/move(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/'field/[string fieldId]/context/[int contextId]/option/[int optionId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldId]/context/[int contextId]/project(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/'field/[string fieldId]/context/[int contextId]/project/remove(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldId]/contexts(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldId]/screens(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldKey]/option(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/'field/[string fieldKey]/option(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldKey]/option/suggestions/edit(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldKey]/option/suggestions/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/'field/[string fieldKey]/option/[int optionId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/'field/[string fieldKey]/option/[int optionId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/'field/[string fieldKey]/option/[int optionId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/'field/[string fieldKey]/option/[int optionId]/issue(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/fieldconfiguration(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/fieldconfiguration/[int id]/fields(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/fieldconfigurationscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/fieldconfigurationscheme/mapping(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/fieldconfigurationscheme/project(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/fieldconfigurationscheme/project(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/filter(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/defaultShareScope(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/filter/defaultShareScope(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/favourite(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/my(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/[int id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/filter/[int id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/filter/[int id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/[int id]/columns(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/filter/[int id]/columns(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/filter/[int id]/columns(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/filter/[int id]/favourite(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/filter/[int id]/favourite(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/[int id]/permission(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/filter/[int id]/permission(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/filter/[int id]/permission/[int permissionId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/filter/[int id]/permission/[int permissionId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/group(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/group(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/group(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/group/bulk(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/group/member(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/group/user(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/group/user(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/groups/picker(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/groupuserpicker(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/instance/license(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/bulk(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/createmeta(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/picker(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/properties(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/[string issueIdOrKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/[string issueIdOrKey]/assignee(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/attachments(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/changelog(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/comment(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/comment(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/comment/[string id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/[string issueIdOrKey]/comment/[string id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/comment/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/editmeta(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/notify(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/[string issueIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/remotelink(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/remotelink(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/remotelink(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/remotelink/[string linkId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/[string issueIdOrKey]/remotelink/[string linkId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/remotelink/[string linkId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/transitions(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/transitions(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/votes(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/votes(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/votes(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/watchers(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/watchers(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/watchers(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issue/[string issueIdOrKey]/worklog(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog/[string id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/[string issueIdOrKey]/worklog/[string id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/worklog/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issue/[string issueIdOrKey]/worklog/[string worklogId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issueLink(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issueLink/[string linkId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issueLink/[string linkId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issueLinkType(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issueLinkType(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issueLinkType/[string issueLinkTypeId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issueLinkType/[string issueLinkTypeId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issueLinkType/[string issueLinkTypeId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuesecurityschemes(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuesecurityschemes/[int id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuesecurityschemes/[int issueSecuritySchemeId]/members(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetype(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issuetype(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetype/[string id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetype/[string id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issuetype/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetype/[string id]/alternatives(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issuetype/[string id]/avatar2(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetype/[string issueTypeId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetype/[string issueTypeId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetype/[string issueTypeId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issuetype/[string issueTypeId]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetypescheme(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issuetypescheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetypescheme/mapping(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetypescheme/project(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescheme/project(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescheme/[int issueTypeSchemeId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issuetypescheme/[int issueTypeSchemeId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescheme/[int issueTypeSchemeId]/issuetype(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescheme/[int issueTypeSchemeId]/issuetype/move(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issuetypescheme/[int issueTypeSchemeId]/issuetype/[int issueTypeId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetypescreenscheme(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issuetypescreenscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetypescreenscheme/mapping(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/issuetypescreenscheme/project(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescreenscheme/project(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId]/mapping(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId]/mapping/default(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/issuetypescreenscheme/[string issueTypeScreenSchemeId]/mapping/remove(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/jql/autocompletedata(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/jql/autocompletedata(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/jql/autocompletedata/suggestions(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/jql/'match(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/jql/parse(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/jql/pdcleaner(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/label(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/mypermissions(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/mypreferences(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/mypreferences(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/mypreferences(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/mypreferences/locale(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/mypreferences/locale(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/mypreferences/locale(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/myself(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/notificationscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/notificationscheme/[int id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/permissions(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/permissions/'check(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/permissions/project(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/permissionscheme(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/permissionscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/permissionscheme/[int schemeId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/permissionscheme/[int schemeId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/permissionscheme/[int schemeId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/permissionscheme/[int schemeId]/permission(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/permissionscheme/[int schemeId]/permission(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/permissionscheme/[int schemeId]/permission/[int permissionId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/permissionscheme/[int schemeId]/permission/[int permissionId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/priority(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/priority/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/project(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/'type(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/'type/accessible(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/'type/["software"|"service_desk"|"business" projectTypeKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/'type/["software"|"service_desk"|"business" projectTypeKey]/accessible(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[string projectIdOrKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/project/[string projectIdOrKey](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/project/[string projectIdOrKey]/archive(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[string projectIdOrKey]/avatar(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/project/[string projectIdOrKey]/avatar/[int id](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/project/[string projectIdOrKey]/avatar2(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/avatars(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/component(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/components(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/project/[string projectIdOrKey]/delete(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/features(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[string projectIdOrKey]/features/[string featureKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[string projectIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/project/[string projectIdOrKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/project/[string projectIdOrKey]/restore(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/role(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/project/[string projectIdOrKey]/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/roledetails(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/statuses(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[string projectIdOrKey]/'type/["software"|"service_desk"|"business" newProjectTypeKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/version(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectIdOrKey]/versions(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[int projectId]/email(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[int projectId]/email(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[int projectId]/hierarchy(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectKeyOrId]/issuesecuritylevelscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectKeyOrId]/notificationscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectKeyOrId]/permissionscheme(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/project/[string projectKeyOrId]/permissionscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/project/[string projectKeyOrId]/securitylevel(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/projectCategory(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/projectCategory(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/projectCategory/[int id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/projectCategory/[int id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/projectCategory/[int id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/projectvalidate/'key(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/projectvalidate/validProjectKey(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/projectvalidate/validProjectName(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/resolution(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/resolution/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/role(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/role(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/role/[int id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/role/[int id]/actors(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/role/[int id]/actors(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/role/[int id]/actors(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/screens(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/screens(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/screens/addToDefault/[string fieldId](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/screens/[int screenId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/screens/[int screenId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/screens/[int screenId]/availableFields(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/screens/[int screenId]/tabs(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/screens/[int screenId]/tabs(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/screens/[int screenId]/tabs/[int tabId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/screens/[int screenId]/tabs/[int tabId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields/[string id](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/screens/[int screenId]/tabs/[int tabId]/fields/[string id]/move(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/screens/[int screenId]/tabs/[int tabId]/move/[int:Signed32 pos](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/screenscheme(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/screenscheme(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/screenscheme/[string screenSchemeId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/screenscheme/[string screenSchemeId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/search(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/securitylevel/[string id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/serverInfo(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/settings/columns(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/settings/columns(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/status(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/status/[string idOrName](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/statuscategory(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/statuscategory/[string idOrKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/task/[string taskId](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/task/[string taskId]/cancel(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/universal_avatar/'type/["project"|"issuetype" 'type]/owner/[string entityId](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/universal_avatar/'type/["project"|"issuetype" 'type]/owner/[string entityId](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/universal_avatar/'type/["project"|"issuetype" 'type]/owner/[string owningObjectId]/avatar/[int id](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/user(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/user(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/assignable/multiProjectSearch(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/assignable/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/bulk(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/bulk/migration(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/columns(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/user/columns(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/user/columns(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/email(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/email/bulk(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/groups(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/permission/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/picker(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/user/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/user/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/search/query(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/search/query/'key(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/user/viewissue/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/users(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/users/search(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/version(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/version/[string id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/version/[string id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/version/[string id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/version/[string id]/mergeto/[string moveIssuesTo](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/version/[string id]/move(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/version/[string id]/relatedIssueCounts(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/version/[string id]/removeAndSwap(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/version/[string id]/unresolvedIssueCount(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/webhook(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/webhook(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/webhook(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/webhook/failed(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/webhook/refresh(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflow(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/workflow(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflow/rule/config(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflow/rule/config(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflow/search(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflow/transitions/[int transitionId]/properties(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflow/[string entityId](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/workflowscheme(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/project(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/project(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id](http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/workflowscheme/[int id]/createdraft(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id]/default(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id]/default(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id]/default(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id]/draft(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id]/draft(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id]/draft(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id]/draft/default(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id]/draft/default(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id]/draft/default(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id]/draft/issuetype/[string issueType](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id]/draft/issuetype/[string issueType](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id]/draft/issuetype/[string issueType](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id]/draft/workflow(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id]/draft/workflow(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id]/draft/workflow(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id]/issuetype/[string issueType](http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id]/issuetype/[string issueType](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id]/issuetype/[string issueType](http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/workflowscheme/[int id]/workflow(http:Caller caller, http:Request request) returns error?;
    resource function put rest/api/'2/workflowscheme/[int id]/workflow(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/api/'2/workflowscheme/[int id]/workflow(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/worklog/deleted(http:Caller caller, http:Request request) returns error?;
    resource function post rest/api/'2/worklog/list(http:Caller caller, http:Request request) returns error?;
    resource function get rest/api/'2/worklog/updated(http:Caller caller, http:Request request) returns error?;
    resource function get rest/atlassian\-connect/'1/addons/[string addonKey]/properties(http:Caller caller, http:Request request) returns error?;
    resource function get rest/atlassian\-connect/'1/addons/[string addonKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function put rest/atlassian\-connect/'1/addons/[string addonKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function delete rest/atlassian\-connect/'1/addons/[string addonKey]/properties/[string propertyKey](http:Caller caller, http:Request request) returns error?;
    resource function get rest/atlassian\-connect/'1/app/module/dynamic(http:Caller caller, http:Request request) returns error?;
    resource function post rest/atlassian\-connect/'1/app/module/dynamic(http:Caller caller, http:Request request) returns error?;
    resource function delete rest/atlassian\-connect/'1/app/module/dynamic(http:Caller caller, http:Request request) returns error?;
};
