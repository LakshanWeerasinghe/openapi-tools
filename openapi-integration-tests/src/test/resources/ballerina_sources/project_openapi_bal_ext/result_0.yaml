openapi: 3.0.1
info:
  title: Api V1
  version: 0.1.0
servers:
  - url: "{server}:{port}/api/v1"
    variables:
      server:
        default: http://localhost
      port:
        default: "9090"
paths:
  /students:
    get:
      operationId: getStudents
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
components:
  schemas:
    BasicStudent:
      required:
        - age
        - name
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
          format: int64
      additionalProperties: false
    Date:
      type: object
      description: Date in proleptic Gregorian calendar.
      allOf:
        - $ref: '#/components/schemas/DateFields'
        - $ref: '#/components/schemas/OptionalTimeOfDayFields'
        - type: object
          properties:
            utcOffset:
              $ref: '#/components/schemas/ZoneOffset'
    DateFields:
      required:
        - day
        - month
        - year
      type: object
      properties:
        year:
          type: integer
          format: int64
        month:
          type: integer
          format: int64
        day:
          type: integer
          format: int64
      description: Fields of the Date record.
    OptionalTimeOfDayFields:
      type: object
      properties:
        hour:
          type: integer
          format: int64
        minute:
          type: integer
          format: int64
        second:
          $ref: '#/components/schemas/Seconds'
      description: TimeOfDay with all the fields beign optional.
    Seconds:
      type: number
      description: Holds the seconds as a decimal value.
      format: double
    Student:
      type: object
      allOf:
        - $ref: '#/components/schemas/BasicStudent'
        - required:
            - subjects
          type: object
          properties:
            subjects:
              type: array
              items:
                $ref: '#/components/schemas/Subject'
          additionalProperties: false
    Subject:
      required:
        - credits
        - examDate
        - name
      type: object
      properties:
        name:
          type: string
        credits:
          type: integer
          format: int64
        examDate:
          $ref: '#/components/schemas/Date'
      additionalProperties: false
    ZoneOffset:
      required:
        - hours
      type: object
      properties:
        hours:
          type: integer
          format: int64
        minutes:
          type: integer
          format: int64
        seconds:
          type: number
          description: |-
            IETF zone files have historical zones that are offset by
            integer seconds; we use Seconds type so that this is a subtype
            of Delta
          format: double
      additionalProperties: false
